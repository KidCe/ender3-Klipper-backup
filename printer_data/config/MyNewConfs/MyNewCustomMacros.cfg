# [gcode_macro PRINT_START]
# gcode:



# [gcode_macro PRINT_END]
# gcode:
	



#---------------------------------------------------------------
[gcode_macro PARK_PURGE_POS]
gcode:
	G0 X247 F10000
	
	
#---------------------------------------------------------------
[gcode_macro PURGE]
gcode:

	#40mm/s retract/unretract = 40mm/s*60s = 2400mm/min FEEDRATE

    SAVE_GCODE_STATE NAME=printstate
    
	
	G92 E0
	
	G91

	G1 E6 F90 #Extrude 20mm
	G1 E-2.5 F2400 #Retract 3.5mm
	G90
	
	
	G0 X235 F7200  #move over wiper
	G0 X247 F7200 #move back to purge pos
	
	G91
	G1 E2.5 F2400 #unretract 3.5mm

	G1 E6 F90 #extrude 20mm
    #90mm/min = 1,5mm/s -> 1,5mm/s * 2,4 = 3,6mm3/s flow

	
	G1 E-0.05 F2400
	
	G90
	G92 E0

    G4 P1000
	
	RESTORE_GCODE_STATE NAME=printstate
	
	

#-----------------------------------------------------------------





[gcode_macro M600]
gcode:
    pause_print
    UNLOAD

#----------------------------------------------------


[menu __main __PAUSE/CANCEL]
type: list
index: 0
name: PAUSE/CANCEL
enable: True # {printer["gcode_macro _km_globals"].menu_show_octoprint}   
		
# Octoprint TEST
[menu __main __PAUSE/CANCEL __PAUSE]
type: command
enable: True
name: PAUSE
gcode:
	PAUSE


[menu __main __PAUSE/CANCEL __RESUME]
type: command
enable: True
name: RESUME
gcode:
	RESUME
	
[menu __main __PAUSE/CANCEL __CANCEL]
type: command
enable: True
name: CANCEL
gcode:
	cancel_print
	
		

[gcode_macro moveRectangle]
gcode:
    G1 Z20
    G1 X20 Y20
	G1 X200
	G1 Y200
	G1 X20
	G1 Y20
    G1 Z20
    G1 X20 Y20
	G1 X200
	G1 Y200
	G1 X20
	G1 Y20
    G1 Z20
    G1 X20 Y20
	G1 X200
	G1 Y200
	G1 X20
	G1 Y20


[gcode_macro moveY]
gcode:
  G1 Z20  
  G1 X115
  G1 Y20
  G1 Y200
  G1 Y20
  G1 Y200
  G1 Y20
  G1 Y200
  G1 Y20
  G1 Y200
  G1 Y20



################



#https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/macros/TEST_SPEED.cfg
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED




[gcode_macro Accel_very_slow]
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=800
    SET_VELOCITY_LIMIT ACCEL=400

[gcode_macro Accel_slow]
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=1500
    SET_VELOCITY_LIMIT ACCEL=3000

[gcode_macro Accel_normal]
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=3000
    SET_VELOCITY_LIMIT ACCEL=6000

[gcode_macro Accel_high]
description: Might work without STEALTHCHOP
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=4500
    SET_VELOCITY_LIMIT ACCEL=9000

[gcode_macro Accel_insane]
description: ONLY USE WITHOUT STEALTHCHOP!!!
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=6000
    SET_VELOCITY_LIMIT ACCEL=12000


  
[gcode_macro probe_calibrate_routine]
gcode:
    G28
    G90
    G1 X170 F3000
    probe_calibrate



[gcode_macro DISABLE_RUNOUT]
gcode:
  SET_GCODE_VARIABLE MACRO=_SENSOR_VARIABLES VARIABLE=disable_runnout VALUE=True
  M118 Filament runout disabled

[gcode_macro ENABLE_RUNOUT]
gcode:
  SET_GCODE_VARIABLE MACRO=_SENSOR_VARIABLES VARIABLE=disable_runnout VALUE=False
  M118 Filament runout enabled
