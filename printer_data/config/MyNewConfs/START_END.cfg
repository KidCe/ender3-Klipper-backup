[gcode_macro START_PRINT]
description: Preheat, home, native adaptive mesh, park & wait (nutzt _kid_options)
gcode:
    {% set bed      = params.BED|default(60)|float %}
    {% set noz      = params.EXTRUDER|default(200)|float %}
    {% set preheat  = params.PREHEAT_NOZZLE|default(150)|float %}
    {% set adaptive = params.ADAPTIVE|default(1)|int %}
    {% set margin   = params.ADAPTIVE_MARGIN|default(3)|float %}
    {% set dbg      = params.DEBUG|default(0)|int %}

    {% if 'gcode_macro _kid_options' not in printer %}
        { action_raise_error("START_PRINT: _kid_options nicht geladen") }
    {% endif %}
    {% set kv = printer['gcode_macro _kid_options'] %}

    {% set move_mm_s = (kv.speed_move|default(100.0))|float %}
    {% set move_F    = (move_mm_s * 60)|int %}
    {% set park_x_cfg = (kv.park_x)|float %}
    {% set park_y_cfg = (kv.park_y)|float %}
    {% set park_dz    = (kv.park_dz)|float %}

    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}

    {% set park_x = [[park_x_cfg, xmin]|max, xmax]|min %}
    {% set park_y = [[park_y_cfg, ymin]|max, ymax]|min %}
    {% set park_z = [park_dz, 5.0]|max %}

    {% if dbg %}
      { action_respond_info(
        "START_PRINT kv=(" ~ park_x_cfg ~ "," ~ park_y_cfg ~ "," ~ park_dz ~
        ") -> clamp=(" ~ park_x ~ "," ~ park_y ~ "," ~ park_z ~
        ") bed=" ~ bed ~ " noz(preheat)=" ~ preheat ~ " target=" ~ noz
      ) }
    {% endif %}

    M117 Preheating...
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed}
    SET_HEATER_TEMPERATURE HEATER=extruder   TARGET={preheat}

    G90
    M83
    M117 Homing...
    G28
    G0 Z{park_z} F1200

    BED_MESH_CLEAR
    {% set have_objs = ('exclude_object' in printer) and (printer.exclude_object.objects|length > 0) %}
    {% if adaptive and have_objs %}
      M117 Adaptive mesh...
      BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN={margin}
    {% else %}
      M117 Full-bed mesh...
      BED_MESH_CALIBRATE
    {% endif %}

    M117 Parking...
    G0 X{park_x} Y{park_y} F{move_F}
    G0 Z{park_z} F1200

    M117 Heating to targets...
    M140 S{bed}
    M104 S{noz}
    M190 S{bed}
    M109 S{noz}
    M117 Ready





[gcode_macro END_PRINT]
description: Lift, park X aus _kid_options, Y präsentieren, Heizer & Lüfter aus
gcode:
    {% if 'gcode_macro _kid_options' not in printer %}
        { action_raise_error("END_PRINT: _kid_options nicht geladen") }
    {% endif %}
    {% set kv = printer['gcode_macro _kid_options'] %}

    {% set retract_mm = (kv.retract|default(1.0))|float %}
    {% set retr_sp_mm = (kv.speed_retract|default(35.0))|float %}
    {% set move_mm_s  = (kv.speed_move|default(100.0))|float %}
    {% set move_F     = (move_mm_s * 60)|int %}
    {% set park_x_cfg = (kv.park_x)|float %}
    {% set park_y_cfg = (kv.park_y)|float %}
    {% set park_dz    = (kv.park_dz)|float %}

    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}
    {% set zmax = printer.toolhead.axis_maximum.z|float %}
    {% set curz = printer.toolhead.position.z|float %}

    {% set park_x = [[park_x_cfg, xmin]|max, xmax]|min %}
    {% set present_y = [[ymin + 5.0, ymin]|max, ymax]|min %}
    {% set need_lift = [park_dz, 5.0]|max %}
    {% set target_z = [curz + need_lift, zmax]|min %}

    G91
    G1 E-{retract_mm} F{(retr_sp_mm*60)|int}
    G90
    G0 Z{target_z} F1200

    G0 X{park_x} F{move_F}
    G0 Y{present_y} F{move_F}

    TURN_OFF_HEATERS
    M104 S0
    M140 S0
    M106 S0

    M117 Print finished



[gcode_macro DUMP_KID_OPTIONS]
description: Zeigt die Inhalte von _kid_options in der Konsole
gcode:
    {% if 'gcode_macro _kid_options' in printer %}
        {% set kv = printer['gcode_macro _kid_options'] %}
        { action_respond_info(
            "has_kid=1 "
            ~ "x=" ~ (kv.park_x|default('MISSING'))
            ~ " y=" ~ (kv.park_y|default('MISSING'))
            ~ " dz=" ~ (kv.park_dz|default('MISSING'))
            ~ " retract=" ~ (kv.retract|default('MISSING'))
            ~ " speed_retract=" ~ (kv.speed_retract|default('MISSING'))
            ~ " speed_move=" ~ (kv.speed_move|default('MISSING'))
        ) }
    {% else %}
        { action_respond_info("has_kid=0") }
    {% endif %}