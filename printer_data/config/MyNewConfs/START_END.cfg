[gcode_macro START_PRINT]
description: Preheat, home, native adaptive bed mesh, park & wait (immer _CLIENT_VARIABLE)
# Optional: DEBUG=1 zeigt die verwendeten Werte in der Konsole
gcode:
    {% set bed      = params.BED|default(60)|float %}
    {% set noz      = params.EXTRUDER|default(200)|float %}
    {% set preheat  = params.PREHEAT_NOZZLE|default(150)|float %}
    {% set adaptive = params.ADAPTIVE|default(1)|int %}
    {% set margin   = params.ADAPTIVE_MARGIN|default(3)|float %}
    {% set dbg      = params.DEBUG|default(0)|int %}

    # _CLIENT_VARIABLE lesen (ohne use_custom-Zwang)
    {% set client   = printer['gcode_macro _CLIENT_VARIABLE'] if 'gcode_macro _CLIENT_VARIABLE' in printer else none %}
    {% set park_x_cfg = (client.variable_custom_park_x|default(247.0))|float if client else 247.0 %}
    {% set park_y_cfg = (client.variable_custom_park_y|default(115.0))|float if client else 115.0 %}
    {% set park_dz    = (client.variable_custom_park_dz|default(2.0))|float if client else 2.0 %}
    {% set move_mm_s  = (client.variable_speed_move|default(100.0))|float if client else 100.0 %}
    {% set move_F     = (move_mm_s * 60)|int %}

    # Maschinenraum clampen
    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}
    {% set park_x = [[park_x_cfg, xmin]|max, xmax]|min %}
    {% set park_y = [[park_y_cfg, ymin]|max, ymax]|min %}
    {% set park_z = [park_dz, 5.0]|max %}

    {% if dbg %}
      { action_respond_info(
        "START_PRINT: client=" ~ (client is not none) ~
        " park_x_cfg=" ~ park_x_cfg ~ " park_y_cfg=" ~ park_y_cfg ~ " park_dz=" ~ park_dz ~
        " -> clamped X=" ~ park_x ~ " Y=" ~ park_y ~ " Z=" ~ park_z ~
        " bed=" ~ bed ~ " noz(preheat)=" ~ preheat ~ " / target=" ~ noz
      ) }
    {% endif %}

    M117 Preheating...
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={preheat}

    G90
    M83
    M117 Homing...
    G28
    G0 Z{park_z} F1200

    BED_MESH_CLEAR
    {% set have_objs = ('exclude_object' in printer) and (printer.exclude_object.objects|length > 0) %}
    {% if adaptive and have_objs %}
      M117 Adaptive mesh...
      BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN={margin}
    {% else %}
      M117 Full-bed mesh...
      BED_MESH_CALIBRATE
    {% endif %}

    ; nach dem Mesh sofort zur Parkposition
    M117 Parking...
    G0 X{park_x} Y{park_y} F{move_F}
    G0 Z{park_z} F1200

    ; hier warten wir auf die Ziel-Temperaturen
    M117 Heating to targets...
    M140 S{bed}
    M104 S{noz}
    M190 S{bed}
    M109 S{noz}
    M117 Ready




[gcode_macro END_PRINT]
description: Safe lift, park X from _CLIENT_VARIABLE, present on Y, heaters & fans off
gcode:
    {% if 'gcode_macro _CLIENT_VARIABLE' not in printer %}
        { action_raise_error("END_PRINT: _CLIENT_VARIABLE nicht geladen – Include-Reihenfolge prüfen!") }
    {% endif %}
    {% set cv = printer['gcode_macro _CLIENT_VARIABLE'] %}

    {% if cv.variable_custom_park_x is not defined
          or cv.variable_custom_park_y is not defined
          or cv.variable_custom_park_dz is not defined %}
        { action_raise_error("END_PRINT: _CLIENT_VARIABLE unvollständig (custom_park_x/y/dz fehlen).") }
    {% endif %}

    {% set retract_mm = (cv.variable_retract|default(1.0))|float %}
    {% set retr_sp_mm = (cv.variable_speed_retract|default(35.0))|float %}
    {% set park_x_cfg = (cv.variable_custom_park_x)|float %}
    {% set park_y_cfg = (cv.variable_custom_park_y)|float %}
    {% set park_dz    = (cv.variable_custom_park_dz)|float %}
    {% set move_mm_s  = (cv.variable_speed_move|default(100.0))|float %}
    {% set move_F     = (move_mm_s * 60)|int %}

    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}
    {% set zmax = printer.toolhead.axis_maximum.z|float %}
    {% set curz = printer.toolhead.position.z|float %}

    {% set park_x = park_x_cfg %}
    {% if park_x < xmin %}{% set park_x = xmin %}{% endif %}
    {% if park_x > xmax %}{% set park_x = xmax %}{% endif %}

    {% set present_y = ymin + 5.0 %}
    {% if present_y < ymin %}{% set present_y = ymin %}{% endif %}
    {% if present_y > ymax %}{% set present_y = ymax %}{% endif %}

    {% set need_lift = park_dz if park_dz >= 5.0 else 5.0 %}
    {% set target_z = curz + need_lift %}
    {% if target_z > zmax %}{% set target_z = zmax %}{% endif %}

    M117 Finishing...
    G91
    G1 E-{retract_mm} F{(retr_sp_mm*60)|int}
    G90
    G0 Z{target_z} F1200

    M117 Parking X...
    G0 X{park_x} F{move_F}

    M117 Presenting on Y...
    G0 Y{present_y} F{move_F}

    M117 Cooling down...
    TURN_OFF_HEATERS
    M104 S0
    M140 S0
    M106 S0

    M117 Print finished

[gcode_macro DUMP_CLIENT_VARIABLES]
description: Zeigt alle _CLIENT_VARIABLE Werte in der Konsole
gcode:
    {% if 'gcode_macro _CLIENT_VARIABLE' in printer %}
        {% set cv = printer['gcode_macro _CLIENT_VARIABLE'] %}
        { action_respond_info(
            "has_client=1 "
            ~ "x=" ~ (cv.variable_custom_park_x|default('MISSING'))
            ~ " y=" ~ (cv.variable_custom_park_y|default('MISSING'))
            ~ " dz=" ~ (cv.variable_custom_park_dz|default('MISSING'))
            ~ " retract=" ~ (cv.variable_retract|default('MISSING'))
            ~ " speed_move=" ~ (cv.variable_speed_move|default('MISSING'))
        ) }
    {% else %}
        { action_respond_info("has_client=0") }
    {% endif %}