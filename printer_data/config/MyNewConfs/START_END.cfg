[gcode_macro START_PRINT]
description: Preheat, home, (optional adaptive) bed mesh, park & wait — nutzt _kid_options + Mesh Skip
gcode:
    # --- Eingangsparameter vom Slicer ---
    {% set bed      = params.BED|default(60)|float %}
    {% set noz      = params.EXTRUDER|default(200)|float %}
    {% set preheat  = params.PREHEAT_NOZZLE|default(150)|float %}
    {% set adaptive = params.ADAPTIVE|default(1)|int %}
    {% set margin   = params.ADAPTIVE_MARGIN|default(3)|float %}
    {% set dbg      = params.DEBUG|default(0)|int %}

    # --- _kid_options laden ---
    {% if 'gcode_macro _kid_options' not in printer %}
        { action_raise_error("START_PRINT: _kid_options nicht geladen") }
    {% endif %}
    {% set kv = printer['gcode_macro _kid_options'] %}

    {% set move_mm_s = (kv.speed_move|default(100.0))|float %}
    {% set move_F    = (move_mm_s * 60)|int %}
    {% set park_x_cfg = (kv.park_x)|float %}
    {% set park_y_cfg = (kv.park_y)|float %}
    {% set park_dz    = (kv.park_dz)|float %}

    # --- Achsenbereich clampen ---
    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}
    {% set park_x = [[park_x_cfg, xmin]|max, xmax]|min %}
    {% set park_y = [[park_y_cfg, ymin]|max, ymax]|min %}
    {% set park_z = [park_dz, 5.0]|max %}

    # --- Debugausgabe ---
    {% if dbg %}
      { action_respond_info(
        "START_PRINT kv=(" ~ park_x_cfg ~ "," ~ park_y_cfg ~ "," ~ park_dz ~
        ") -> clamp=(" ~ park_x ~ "," ~ park_y ~ "," ~ park_z ~
        ") bed=" ~ bed ~ " noz(preheat)=" ~ preheat ~ " target=" ~ noz
      ) }
    {% endif %}

    # --- Vorheizen ---
    M117 Preheating...
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed}
    SET_HEATER_TEMPERATURE HEATER=extruder   TARGET={preheat}

    # --- Vorbereitung ---
    G90
    M83
    M117 Homing...
    G28
    G0 Z{park_z} F1200

    # --- Mesh-Handling mit Skip ---
    {% set skip = printer.save_variables.variables.skip_mesh_next|default(0)|int %}
    {% set have_mesh = ('bed_mesh' in printer)
                       and (printer.bed_mesh.mesh_matrix is defined)
                       and (printer.bed_mesh.mesh_matrix|length > 0) %}

    {% if skip == 1 and have_mesh %}
        M117 Using existing mesh
        RESPOND TYPE=command MSG="action:notification title=Mesh Skip body=Benutze bestehendes Mesh (kein Calibrate)."
        SAVE_VARIABLE VARIABLE=skip_mesh_next VALUE=0
    {% elif skip == 1 and not have_mesh %}
        M117 Skip requested but no mesh present -> calibrating
        RESPOND TYPE=command MSG="action:notification title=Mesh Skip verworfen body=Kein Mesh vorhanden – kalibriere jetzt."
        {% set have_objs = ('exclude_object' in printer) and (printer.exclude_object.objects|length > 0) %}
        {% if adaptive and have_objs %}
            BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN={margin}
        {% else %}
            BED_MESH_CALIBRATE
        {% endif %}
        SAVE_VARIABLE VARIABLE=skip_mesh_next VALUE=0
    {% else %}
        M117 Calibrating bed mesh...
        {% set have_objs = ('exclude_object' in printer) and (printer.exclude_object.objects|length > 0) %}
        {% if adaptive and have_objs %}
            BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN={margin}
        {% else %}
            BED_MESH_CALIBRATE
        {% endif %}
    {% endif %}

    # --- Parken während Aufheizen ---
    M117 Parking...
    G0 X{park_x} Y{park_y} F{move_F}
    G0 Z{park_z} F1200

    # --- Endgültiges Aufheizen ---
    M117 Heating to targets...
    M140 S{bed}
    M104 S{noz}
    M190 S{bed}
    M109 S{noz}
    M117 Ready






[gcode_macro END_PRINT]
description: Lift, park X aus _kid_options, Y präsentieren (nach hinten), Heizer & Lüfter aus, skip reset
gcode:
    {% if 'gcode_macro _kid_options' not in printer %}
        { action_raise_error("END_PRINT: _kid_options nicht geladen") }
    {% endif %}
    {% set kv = printer['gcode_macro _kid_options'] %}

    {% set retract_mm = (kv.retract|default(1.0))|float %}
    {% set retr_sp_mm = (kv.speed_retract|default(35.0))|float %}
    {% set move_mm_s  = (kv.speed_move|default(100.0))|float %}
    {% set move_F     = (move_mm_s * 60)|int %}
    {% set park_x_cfg = (kv.park_x)|float %}
    {% set park_dz    = (kv.park_dz)|float %}

    {% set xmin = printer.toolhead.axis_minimum.x|float %}
    {% set ymin = printer.toolhead.axis_minimum.y|float %}
    {% set xmax = printer.toolhead.axis_maximum.x|float %}
    {% set ymax = printer.toolhead.axis_maximum.y|float %}
    {% set zmax = printer.toolhead.axis_maximum.z|float %}
    {% set curz = printer.toolhead.position.z|float %}

    {% set park_x   = [[park_x_cfg, xmin]|max, xmax]|min %}
    {% set need_lift = [park_dz, 5.0]|max %}
    {% set target_z  = [curz + need_lift, zmax]|min %}
    {% set present_y = [[ymax - 5.0, ymin]|max, ymax]|min %}  ; immer nach hinten

    ; --- sichern & anheben ---
    M117 Finishing...
    G91
    G1 E-{retract_mm} F{(retr_sp_mm*60)|int}
    G90
    G0 Z{target_z} F1200

    ; --- Parken & Präsentieren ---
    G0 X{park_x} F{move_F}
    G0 Y{present_y} F{move_F}

    ; --- Heizer & Lüfter aus ---
    TURN_OFF_HEATERS
    M104 S0
    M140 S0
    M106 S0

    ; --- Mesh-Skip immer zurücksetzen + Feedback ---
    SAVE_VARIABLE VARIABLE=skip_mesh_next VALUE=0
    { action_respond_info("END_PRINT: skip_mesh_next wurde auf 0 zurückgesetzt.") }
    RESPOND TYPE=command MSG="action:notification title=Mesh Skip zurückgesetzt body=Flag nach Druckende automatisch deaktiviert."
    M117 Mesh Skip Reset

    M117 Print finished





[gcode_macro DUMP_KID_OPTIONS]
description: Zeigt die Inhalte von _kid_options in der Konsole
gcode:
    {% if 'gcode_macro _kid_options' in printer %}
        {% set kv = printer['gcode_macro _kid_options'] %}
        { action_respond_info(
            "has_kid=1 "
            ~ "x=" ~ (kv.park_x|default('MISSING'))
            ~ " y=" ~ (kv.park_y|default('MISSING'))
            ~ " dz=" ~ (kv.park_dz|default('MISSING'))
            ~ " retract=" ~ (kv.retract|default('MISSING'))
            ~ " speed_retract=" ~ (kv.speed_retract|default('MISSING'))
            ~ " speed_move=" ~ (kv.speed_move|default('MISSING'))
        ) }
    {% else %}
        { action_respond_info("has_kid=0") }
    {% endif %}



[gcode_macro MESH_SKIP_ON]
description: Aktiviert "Skip Bed Mesh Next"
gcode:
    SAVE_VARIABLE VARIABLE=skip_mesh_next VALUE=1
    { action_respond_info("MESH_SKIP_ON: skip_mesh_next = 1") }
    RESPOND TYPE=command MSG="action:notification title=Mesh Skip aktiv body=Das nächste START_PRINT überspringt Bed Mesh."
    M117 Mesh Skip = ON

[gcode_macro MESH_SKIP_OFF]
description: Deaktiviert "Skip Bed Mesh Next"
gcode:
    SAVE_VARIABLE VARIABLE=skip_mesh_next VALUE=0
    { action_respond_info("MESH_SKIP_OFF: skip_mesh_next = 0") }
    RESPOND TYPE=command MSG="action:notification title=Mesh Skip aus body=Bed Mesh wird wieder normal ausgeführt."
    M117 Mesh Skip = OFF